apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sheetapp-ingress
  namespace: sheetapp
  annotations:
    # --- !! IMPORTANT !! ---
    # Annotations depend heavily on your Ingress controller (Nginx, Traefik, etc.)
    # and how you manage TLS certificates (e.g., cert-manager).
    # Replace these examples with appropriate annotations for your setup.

    # --- Example Annotations for Nginx Ingress Controller ---
    kubernetes.io/ingress.class: "nginx" # Specify Nginx Ingress class
    nginx.ingress.kubernetes.io/rewrite-target: /$2 # Needed if backend path is stripped
    nginx.ingress.kubernetes.io/proxy-body-size: "2m" # Allow larger request bodies if needed
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10s"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60s"

    # --- Example Annotations for TLS with cert-manager ---
    cert-manager.io/cluster-issuer: "letsencrypt-prod" # Replace with your cert-manager issuer name
    nginx.ingress.kubernetes.io/ssl-redirect: "true" # Force HTTPS

spec:
  tls: # Configure TLS certificate
    - hosts:
        - sheetapp.yourdomain.com # <-- REPLACE with your actual domain
      secretName: sheetapp-tls-secret # Secret generated by cert-manager or created manually
  rules:
    - host: sheetapp.yourdomain.com # <-- REPLACE with your actual domain
      http:
        paths:
          # Route API requests (/api/...) to the backend service
          - path: /api(/|$)(.*) # Match /api/ and anything after it
            pathType: Prefix
            backend:
              service:
                name: backend-service # Service defined in 07-service-backend.yaml
                port:
                  number: 80 # Port defined in the backend service

          # Route all other requests to the frontend service
          - path: /()(.*) # Match the root path and everything else
            pathType: Prefix
            backend:
              service:
                name: frontend-service # Service defined in 09-service-frontend.yaml
                port:
                  number: 80 # Port defined in the frontend service